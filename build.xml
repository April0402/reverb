<project name="reverb" default="jar" basedir=".">
  <property name="data" location="src/main/resources"/>
  <property name="main.class" value="edu.washington.cs.knowitall.extractor.ReVerbExtractor" />

  <import file="../build-common.xml" />
    

  <property name="version" value="1.0"/>
  <property name="distfiles" value="dist_files"/>
  <property name="dist.name" value="${ant.project.name}-${version}"/>
  <property name="dist" value="${build}/${dist.name}"/>
  <property name="examples" value="examples"/>
  <property name="testout" value="${build}/test_output"/>
  <property name="src.tests" value="src/test/java"/>

  <path id="main.classpath">
      <fileset file="${libraries}/jar/guava-r07.jar" />
      <fileset file="${libraries}/jar/commons-lang-2.5.jar" />
      <fileset file="${libraries}/jar/opennlp-tools-1.5.0.jar" />
      <fileset file="${libraries}/jar/maxent-3.0.0.jar" />
      <fileset file="${libraries}/jar/junit-4.8.2.jar" />
      <fileset file="${libraries}/jar/weka-3-6-4.jar" />
      <fileset file="${libraries}/jar/commons-cli-1.2.jar" />
      <fileset file="${libraries}/jar/hadoop-core-0.20.1+133.jar" />
      <fileset file="${libraries}/jar/lucene-core-3.0.3.jar" />
      <fileset file="${libraries}/jar/lucene-remote-3.0.3-dev.jar" />
      <fileset file="../commonlib/build/jar/commonlib.jar" />
      <pathelement path="src/main/resources" />
  </path>

    <path id="test.classpath">
        <path refid="main.classpath"/>
        <pathelement location="${build}/classes"/>
        <pathelement path="${data}"/>
    </path>


    <target name="compile" depends="init">
        <mkdir dir="${build}/classes"/>
        <javac destdir="${build}/classes" includeAntRuntime="false" debug="true" debuglevel="lines,vars,source">
            <src path="${src}"/>
            <src path="${src.tests}"/>
            <classpath refid="main.classpath"/>
        </javac>
    </target>

  <target name="test" depends="compile">
    <mkdir dir="${testout}"/>
    <junit printsummary="yes" fork="yes" haltonfailure="yes">
        <jvmarg value="-Xmx1024M"/>
        <classpath refid="test.classpath"/>
        <formatter type="plain"/>
        <batchtest fork="yes" todir="${testout}">
            <fileset dir="${build}/classes">
                <include name="**/*Test.class"/>
            </fileset>
        </batchtest>
    </junit>

  </target>

  <target name="doc" depends="jar">
      <javadoc 
        packagenames="edu.washington.cs.knowitall.*"
        sourcepath="${src}"
        destdir="build/docs"
        author="true"
        windowtitle="ReVerb API">
        
        <classpath refid="main.classpath"/>
      </javadoc>
  </target>

  <target name="website" depends="dist">
    <mkdir dir="${build}/website"/>
    <copy todir="${build}/website">
        <fileset dir="website"/>
        <fileset file="${build}/${dist.name}.tar.gz"/>
        <fileset file="${distfiles}/README.txt"/>
        <fileset file="${distfiles}/LICENSE.txt"/>
    </copy>
  </target>

  <target name="dist" depends="jar,doc">

    <mkdir dir="${dist}"/>

    <!-- The jarfile -->
    <copy file="${build.jarfile}" todir="${dist}/lib"/>

    <!-- The source files -->
    <copy todir="${dist}/src">
        <fileset dir="${src}"/>
    </copy>

    <!-- The javadocs -->
    <copy todir="${dist}/docs">
        <fileset dir="build/docs"/>
    </copy>

    <!-- The lib files -->
    <copy todir="${dist}/lib">
      <fileset file="${libraries}/jar/guava-r07.jar" />
      <fileset file="${libraries}/jar/commons-lang-2.5.jar" />
      <fileset file="${libraries}/jar/opennlp-tools-1.5.0.jar" />
      <fileset file="${libraries}/jar/maxent-3.0.0.jar" />
      <fileset file="${libraries}/jar/junit-4.8.2.jar" />
      <fileset file="${libraries}/jar/weka-3-6-4.jar" />
      <fileset file="${libraries}/jar/lucene-remote-3.0.3-dev.jar" />
      <fileset file="../commonlib/build/jar/commonlib.jar" />
      <fileset file="${libraries}/jar/commons-cli-1.2.jar" />
    </copy>

    <!-- The OpenNLP models and confidence model -->
    <copy todir="${dist}/data">
        <fileset dir="${data}">
            <include name="conf.weka"/>
            <include name="en-chunker.bin"/>
            <include name="en-pos-maxent.bin"/>
            <include name="en-sent.bin"/>
            <include name="en-token.bin"/>
            <include name="freq_rel.txt.gz"/>
        </fileset>
    </copy>

    <!-- The training data for the confidence model -->
    <copy todir="${dist}/data/training">
        <fileset dir="${data}/training">
            <include name="README.txt"/>
            <include name="all_labels.txt"/>
            <include name="web_500_labels.txt"/>
            <include name="wikipedia_500_labels.txt"/>
        </fileset>
    </copy>

    <!-- The examples directory -->
    <copy todir="${dist}/examples">
        <fileset dir="${examples}">
            <include name="Example.java"/>
            <include name="Example.class"/>
        </fileset>
    </copy>

    <!-- The text directory -->
    <copy todir="${dist}/text">
        <fileset dir="dist_files/text"/>
    </copy>

    <!-- copy the main script, maintaining permissions -->
    <exec executable="cp">
        <arg value="scripts/reverb.sh"/>
        <arg value="${dist}"/>
    </exec>

    <copy file="${distfiles}/LICENSE.txt" todir="${dist}"/>
    <copy file="${distfiles}/README.txt" todir="${dist}"/>
    <copy file="${distfiles}/build.xml" todir="${dist}"/>

    <!-- Make a tarball. Uses a hacky script to get the permissions correct. -->
    <exec executable="dist_files/dist_tar.sh">
        <arg value="${build}"/>
        <arg value="${dist.name}.tar"/>
        <arg value="${dist.name}"/>
    </exec>
    <gzip destfile="${build}/${dist.name}.tar.gz" src="${build}/${dist.name}.tar"/>
    <delete file="${build}/${dist.name}.tar"/>
    
  </target>

	<target name="fatjar" depends="compile, copy-lib" description="generate a jar with all dependencies">
        <jar jarfile="${build.fatjarfile}" basedir="${build}/classes">
        <zipgroupfileset dir="lib" includes="*" />
    	<zipfileset dir="data" includes="*" />
        </jar>
    </target>
	
</project>
